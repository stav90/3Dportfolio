/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 Room.glb --transform -k
*/
import gsap from 'gsap'
import React, { useRef, useEffect } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import useApp from '../useApp'
import * as THREE from 'three'

export default function FloorAndWalls(props) {
  const { nodes, materials } = useGLTF('/models/Room-transformed.glb')
  const textureProps = useTexture({
      // map: '/textures/bricks/Stylized_Bricks_001_basecolor.jpg',
      // displacementMap: '/textures/bricks/Stylized_Bricks_001_height.png',
      normalMap: '/textures/bricks/Stylized_Bricks_001_normal.jpg',
      roughnessMap: '/textures/bricks/Stylized_Bricks_001_roughness.jpg',
      aoMap: '/textures/bricks/Stylized_Bricks_001_ambientOcclusion.jpg',
  })

  // textureProps.map.repeat.set(2, 2);
  textureProps.normalMap.repeat.set(2, 2);
  textureProps.roughnessMap.repeat.set(2, 2);
  textureProps.aoMap.repeat.set(2, 2);
  // textureProps.map.wrapS = textureProps.map.wrapT = THREE.RepeatWrapping;
  textureProps.normalMap.wrapS = textureProps.normalMap.wrapT = THREE.RepeatWrapping;
  textureProps.roughnessMap.wrapS = textureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  textureProps.aoMap.wrapS = textureProps.aoMap.wrapT = THREE.RepeatWrapping;

  const waveAnimation = useApp((state) => state.waveAnimation)

  const floor = useRef()
  const walls = useRef()

  const floorAnimation = () => {
    gsap.from(floor.current.position, {y: -4, duration:1, ease: 'power3.out'})
    gsap.from(walls.current.position, {y: 4, duration:1, ease: 'power3.out'})
  }

  useEffect(() => {
    floorAnimation()
  }, [])

  return (
    <group {...props} dispose={null}>
      <mesh ref={floor} name="Floor" geometry={nodes.Floor.geometry} material={materials['dark purple']} position={[2, -2, -2]} scale={[1, 1.33, 1]}>
        <mesh name="floorSurface001" geometry={nodes.floorSurface001.geometry} material={materials['light purple']} />
      </mesh>
      <group ref={walls} name="Walls" position={[2, -2, -2]} scale={[1, 1.33, 1]}>
        <mesh name="Walls_1" geometry={nodes.Walls_1.geometry} material={materials['dark purple']} />
        <mesh name="Walls_2" geometry={nodes.Walls_2.geometry} material={materials['darkest purple']} />
        <mesh name="FeatureWall" geometry={nodes.FeatureWall.geometry} material={materials['darkest purple']} >
          <meshStandardMaterial {...textureProps} color={'#412E95'}/>
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Room-transformed.glb')
